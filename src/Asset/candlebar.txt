import React, { useEffect, useRef, useState } from "react";
import { createChart, CrosshairMode } from "lightweight-charts";
// import { priceData as data } from './PriceData';
import Axios from "axios";

import "./App.css";

export const ChartComponent = (props) => {
  const chartContainerRef = useRef();
  useEffect(() => {
    const handleResize = () => {
      chart.applyOptions({ width: chartContainerRef.current.clientWidth });
    };

    const { data } = props;
    // var yesterday = new Date(Date.now() - 864e5).toISOString().substring(0,19).replace("T"," ")
    // var today =new Date().toISOString().substring(0,19).replace("T"," ")
    // var nextMin=new Date(+new Date() + 60000*1).toISOString().substring(0,19).replace("T"," ")

    const chart = createChart(chartContainerRef.current, {
      width: chartContainerRef.current.clientWidth,
      height: chartContainerRef.current.clientHeight,
      layout: {
        backgroundColor: "#1c1f2d",
        textColor: "rgba(255, 255, 255, 0.9)",
      },
      grid: {
        vertLines: {
          color: "#334158",
        },
        horzLines: {
          color: "#334158",
        },
      },
      priceScale: {
        borderColor: "#485c7b",
      },
      timeScale: {
        borderColor: "#485c7b",
        rightOffset: 2,
        timeVisible: true,
        secondsVisible: true,
        
      },
    });
 
    chart.timeScale().fitContent();

    const newSeries = chart.addCandlestickSeries({
      upColor: "#4bffb5",
      downColor: "#ff4976",
      borderDownColor: "#ff4976",
      borderUpColor: "#4bffb5",
      wickDownColor: "#838ca1",
      wickUpColor: "#838ca1",
    });
  
    newSeries.setData(data);
    setInterval(() => {
      var today =new Date().toISOString().substring(0,19).replace("T"," ")
      console.log(new Date().toISOString(),"today");
      console.log(new Date(+new Date() - 60000*1),"today 1m");
      var PreMin=new Date(+new Date() - 60000*1).toISOString().substring(0,19).replace("T"," ")
      const api4=`https://currencydatafeed.com/api/intraday1m.php?currency=EUR/USD&from=${PreMin}&to=${today}&token=us0bqmdc9s35b6yn5imx`
      const toTimestamp = (strDate) => {  
        const dt = Date.parse(strDate);  
        return dt / 1000;  
      }

      
        Axios.get(api4).then((response) => {
          console.log(response,"response");
          let apidata = response.data.currency.data.reverse() 
          let newArrayOfObj = apidata.map((item) => { return { time: toTimestamp(item.date), open:+item.open, high:+item.high, low:+item.low, close:+item.close } });
          console.log(newArrayOfObj, "checking data in one minute ");
          let obj=newArrayOfObj[0]
          console.log(obj,"obj");
          newSeries.update(obj);
          // setData(newArrayOfObj)
        });
    }, 60000);
   
    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);

      chart.remove();
    };
  }, [props.data]);

  return (
  <>
  <div className="chart" ref={chartContainerRef} />
  </>
  );
  
};
